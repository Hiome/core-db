#!/usr/bin/python

import datetime # TODO DELETE ME TOO

import os
import raven
import subprocess
from yoyo import get_backend
from yoyo import read_migrations

with open(os.getenv('UID_FILE', '/sys/class/net/eth0/address'), "r") as file:
  MACHINEID = file.read().strip()

raven.Client(
  release=raven.fetch_git_sha(os.path.dirname(__file__)),
  site=MACHINEID,
  name='core-db'
)

backend = get_backend('postgres://')
migrations = read_migrations('/home/pi/core-db/migrations')

try:
  backend.apply_migrations(backend.to_apply(migrations))
except Exception as e:
  # TODO delete this whole except block and datetime import
  if e.message.strip() == 'column "sensitivity" of relation "sensors" already exists':
    migration = migrations[-1]
    sql = backend.mark_migration_sql.format(backend)
    backend.execute(sql, {'migration_hash': migration.hash,
                       'migration_id': migration.id,
                       'when': datetime.datetime.utcnow()})
  else:
    raise

subprocess.check_output('sudo systemctl restart pgbouncer.service', shell=True)

print "done migrating"
